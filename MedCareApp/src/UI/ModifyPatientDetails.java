/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.MedcareDataRecord;
import model.PatientDataRecord;
import model.PatientDetails;

/**
 *
 * @author deepaksharma
 */
public class ModifyPatientDetails extends javax.swing.JPanel {

    /**
     * Creates new form ModifyPatientDetails
     */
    
    PatientDataRecord patient_history;
    
    public ModifyPatientDetails(PatientDataRecord patient_history) {
        initComponents();
        this.patient_history = patient_history;
        
        PopulatePatientTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        PatientStreetNameLabel = new javax.swing.JLabel();
        PatientEmailLabel = new javax.swing.JLabel();
        PatientStreetNameTxt = new javax.swing.JTextField();
        PatientIDLabel = new javax.swing.JLabel();
        PatientBloodPressureTxt = new javax.swing.JTextField();
        PatientGenderTxt = new javax.swing.JTextField();
        PatientCityLabel = new javax.swing.JLabel();
        PatientCityTxt = new javax.swing.JTextField();
        PatientIDTxt = new javax.swing.JTextField();
        PatientBloodGroupLabel = new javax.swing.JLabel();
        PatientCountryLabel = new javax.swing.JLabel();
        PatientBodyTempTxt = new javax.swing.JTextField();
        PatientCountryTxt = new javax.swing.JTextField();
        PatientBodyTempLabel = new javax.swing.JLabel();
        PatientPostalCodeLabel = new javax.swing.JLabel();
        PatientAgeLabel = new javax.swing.JLabel();
        PatientNameLabel = new javax.swing.JLabel();
        PatientEmailTxt = new javax.swing.JTextField();
        PatientPostalCodeTxt = new javax.swing.JTextField();
        PatientBloodGroupTxt = new javax.swing.JTextField();
        PatientNameTxt = new javax.swing.JTextField();
        PatientDiagnosisLabel = new javax.swing.JLabel();
        PatientBloodPressureLabel = new javax.swing.JLabel();
        PatientDiagnosisTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        PatientAgeTxt = new javax.swing.JTextField();
        PatientGenderLabel = new javax.swing.JLabel();
        PatientMedicalHistoryTxt = new javax.swing.JTextField();
        PatientContactLabel = new javax.swing.JLabel();
        PatientHNOLabel = new javax.swing.JLabel();
        PatientMedicalHistoryLabel = new javax.swing.JLabel();
        PatientHNOTxt = new javax.swing.JTextField();
        PatientContactTxt = new javax.swing.JTextField();

        jToggleButton1.setText("jToggleButton1");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Modify Patient Details");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Age", "Blood Group", "Contact"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("VIEW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        PatientStreetNameLabel.setText("Street Name:");

        PatientEmailLabel.setText("Email:");

        PatientStreetNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientStreetNameTxtActionPerformed(evt);
            }
        });

        PatientIDLabel.setText("ID:");

        PatientBloodPressureTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientBloodPressureTxtActionPerformed(evt);
            }
        });

        PatientCityLabel.setText("City:");

        PatientIDTxt.setEditable(false);
        PatientIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientIDTxtActionPerformed(evt);
            }
        });

        PatientBloodGroupLabel.setText("Blood Group:");

        PatientCountryLabel.setText("Country:");

        PatientBodyTempLabel.setText("Body Temperature:");

        PatientPostalCodeLabel.setText("Postal Code:");

        PatientAgeLabel.setText("Age:");

        PatientNameLabel.setText("Name:");

        PatientBloodGroupTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientBloodGroupTxtActionPerformed(evt);
            }
        });

        PatientNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientNameTxtActionPerformed(evt);
            }
        });

        PatientDiagnosisLabel.setText("Diagnosis:");

        PatientBloodPressureLabel.setText("Blood Pressure:");

        PatientDiagnosisTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientDiagnosisTxtActionPerformed(evt);
            }
        });

        jLabel10.setText("Address:");

        PatientGenderLabel.setText("Gender:");

        PatientContactLabel.setText("Contact:");

        PatientHNOLabel.setText("H.No:");

        PatientMedicalHistoryLabel.setText("Medical History:");

        PatientContactTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientContactTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(PatientAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PatientDiagnosisLabel)
                                        .addComponent(PatientContactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PatientEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(25, 25, 25)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(PatientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientGenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PatientEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientDiagnosisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientContactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientAgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PatientIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(PatientHNOLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(PatientPostalCodeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(PatientCountryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(PatientCityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(PatientStreetNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PatientStreetNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientHNOTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientCityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientPostalCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PatientBodyTempLabel)
                                            .addComponent(PatientMedicalHistoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientBloodGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientBloodPressureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(PatientBodyTempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientBloodPressureTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientBloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PatientMedicalHistoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(PatientGenderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addGap(209, 209, 209)
                            .addComponent(jButton1))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientIDLabel))
                        .addGap(2, 2, 2))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientHNOLabel)
                            .addComponent(PatientHNOTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PatientStreetNameLabel)
                            .addComponent(PatientStreetNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientCityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientCityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientCountryLabel)
                            .addComponent(PatientCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientPostalCodeLabel)
                            .addComponent(PatientPostalCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientBloodPressureLabel)
                            .addComponent(PatientBloodPressureTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientBodyTempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientBodyTempLabel))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientBloodGroupLabel)
                            .addComponent(PatientBloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientMedicalHistoryLabel)
                            .addComponent(PatientMedicalHistoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientNameLabel)
                            .addComponent(PatientNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientGenderLabel)
                            .addComponent(PatientGenderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAgeLabel)
                            .addComponent(PatientAgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientContactLabel)
                            .addComponent(PatientContactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientEmailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientDiagnosisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientDiagnosisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        int SelectedRowIndex = jTable1.getSelectedRow();
        
        if (SelectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a record to view details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        PatientDetails SelectedPatRecord = (PatientDetails) model.getValueAt(SelectedRowIndex, 0);
        
        PatientNameTxt.setText(SelectedPatRecord.getPatient_name());
        PatientIDTxt.setText(String.valueOf(SelectedPatRecord.getPatient_id()));
        PatientAgeTxt.setText(String.valueOf(SelectedPatRecord.getPatient_age()));
        PatientBloodGroupTxt.setText(String.valueOf(SelectedPatRecord.getPatient_bloodgroup()));
        PatientBloodPressureTxt.setText(String.valueOf(SelectedPatRecord.getPatient_bloodpressure()));
        PatientBodyTempTxt.setText(String.valueOf(SelectedPatRecord.getPatient_bodytemp()));
        PatientCityTxt.setText(SelectedPatRecord.getPatient_city());
        PatientContactTxt.setText(String.valueOf(SelectedPatRecord.getPatient_contact()));
        PatientCountryTxt.setText(SelectedPatRecord.getPatient_country());
        PatientDiagnosisTxt.setText(SelectedPatRecord.getPatient_diagnosis());
        PatientGenderTxt.setText(SelectedPatRecord.getPatient_gender());
        PatientHNOTxt.setText(String.valueOf(SelectedPatRecord.getPatient_house_no()));
        PatientEmailTxt.setText(SelectedPatRecord.getPatient_email());
        PatientMedicalHistoryTxt.setText(SelectedPatRecord.getPatient_medicalhistory());
        PatientPostalCodeTxt.setText(SelectedPatRecord.getPatient_postal_code());
        PatientStreetNameTxt.setText(SelectedPatRecord.getPatient_street_name());
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String name = PatientNameTxt.getText();
        if (name.length() == 0 ){
            JOptionPane.showMessageDialog(this,"The 'Name' is a mandatory field, please provide required value.", "Empty Field", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
           String validate_age = String.valueOf(PatientAgeTxt.getText());
        if (validate_age.length() == 0 ){
            JOptionPane.showMessageDialog(this,"The 'Age' is a mandatory field, please provide required value.", "Empty Field", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (validate_age.length() > 0 ){
            try 
                { 
                Integer.parseInt(PatientAgeTxt.getText()); 
                }  
            catch (NumberFormatException e)  
                { 
                JOptionPane.showMessageDialog(this,"The Age input is invalid, please provide the integer value only.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;}          
        } 
        
        String validate_contact = String.valueOf(PatientContactTxt.getText());
        if (validate_contact.length() == 0 ){
            JOptionPane.showMessageDialog(this,"The 'Contact' is a mandatory field, please provide required value.", "Empty Field", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (validate_contact.length() > 0 ){
            try 
                { 
                Long.parseLong(PatientContactTxt.getText()); 
                }  
            catch (NumberFormatException e)  
                { 
                JOptionPane.showMessageDialog(this,"The Contact is invalid, please provide the integer value only.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;}          
        } 
        
        String validate_house_no = String.valueOf(PatientHNOTxt.getText());
        if (validate_house_no.length() > 0 ){
            try 
                { 
                Integer.parseInt(PatientHNOTxt.getText()); 
                }  
            catch (NumberFormatException e)  
                { 
                JOptionPane.showMessageDialog(this,"The H.No input is invalid, please provide the integer value only.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;}          
        } 
        
        String validate_blood_pressure = String.valueOf(PatientBloodPressureTxt.getText());
        if (validate_blood_pressure.length() > 0 ){
            try 
                { 
                Integer.parseInt(PatientBloodPressureTxt.getText()); 
                }  
            catch (NumberFormatException e)  
                { 
                JOptionPane.showMessageDialog(this,"The Blood Pressure input is invalid, please provide the integer value only.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;}          
        } 
        
        String validate_blood_temperature = String.valueOf(PatientBodyTempTxt.getText());
        if (validate_blood_temperature.length() > 0 ){
            try 
                { 
                Integer.parseInt(PatientBodyTempTxt.getText()); 
                }  
            catch (NumberFormatException e)  
                { 
                JOptionPane.showMessageDialog(this,"The Body Temperature input is invalid, please provide the integer value only.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;}          
        } 
        
        if (validate_contact.length() != 10 ){
                JOptionPane.showMessageDialog(this,"The Contact is invalid, please provide the valid contact value.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
                return;
        }
        
        
        String validate_pat_mail = String.valueOf(PatientEmailTxt.getText());
        if (!validate_pat_mail.contains("@") && validate_pat_mail.length() > 0  ){
            JOptionPane.showMessageDialog(this,"The email is invalid, please provide the valid mail id.", "Invalid Value", JOptionPane.WARNING_MESSAGE);
            return;     
        } 
        
        int update_patient_id = Integer.parseInt(PatientIDTxt.getText()); 
        for (PatientDetails ed : patient_history.getHistory()){
            int pat_id = ed.getPatient_id();
            if (update_patient_id == pat_id){     
                
            int patient_id = Integer.parseInt(PatientIDTxt.getText());
            String patient_name = PatientNameTxt.getText();
            String patient_gender = PatientGenderTxt.getText();
            int patient_age = Integer.parseInt(PatientAgeTxt.getText());
            long patient_contact = Long.parseLong(PatientContactTxt.getText());
            String patient_email = PatientEmailTxt.getText();
            String patient_diagnosis = PatientDiagnosisTxt.getText();
            int patient_hno = Integer.parseInt(PatientHNOTxt.getText());
            String patient_streetname = PatientStreetNameTxt.getText();
            String patient_city = PatientCityTxt.getText();
            String patient_country = PatientCountryTxt.getText();
            String patient_postalcode = PatientPostalCodeTxt.getText();
            int patient_bp = Integer.parseInt(PatientBloodPressureTxt.getText());
            int patient_temp = Integer.parseInt(PatientBodyTempTxt.getText());
            String patient_bloodgrp = PatientBloodGroupTxt.getText();
            String patient_medical_history = PatientMedicalHistoryTxt.getText();
             
                          
                PatientDetails UpdatePatRec = patient_history.UpdatePatient();
                
                UpdatePatRec.setPatient_name(patient_name);
                UpdatePatRec.setPatient_id(patient_id);
                UpdatePatRec.setPatient_age(patient_age);
                UpdatePatRec.setPatient_gender(patient_gender);
                UpdatePatRec.setPatient_contact(patient_contact);
                UpdatePatRec.setPatient_email(patient_email);
                UpdatePatRec.setPatient_diagnosis(patient_diagnosis);
                UpdatePatRec.setPatient_house_no(patient_hno);
                UpdatePatRec.setPatient_street_name(patient_streetname);
                UpdatePatRec.setPatient_city(patient_city);
                UpdatePatRec.setPatient_country(patient_country);
                UpdatePatRec.setPatient_postal_code(patient_postalcode);
                UpdatePatRec.setPatient_bloodpressure(patient_bp);
                UpdatePatRec.setPatient_bodytemp(patient_temp);
                UpdatePatRec.setPatient_bloodgroup(patient_bloodgrp);
                UpdatePatRec.setPatient_medicalhistory(patient_medical_history);
                
                JOptionPane.showMessageDialog(this, "Patient Details has been updated");
                
                patient_history.DeletePatientDetails(ed);
                
                PatientAgeTxt.setText("");
                PatientBloodGroupTxt.setText("");
                PatientBloodPressureTxt.setText("");
                PatientBodyTempTxt.setText("");
                PatientCityTxt.setText("");
                PatientContactTxt.setText("");
                PatientCountryTxt.setText("");
                PatientDiagnosisTxt.setText("");
                PatientEmailTxt.setText("");
                PatientGenderTxt.setText("");
                PatientHNOTxt.setText("");
                PatientIDTxt.setText("");
                PatientMedicalHistoryTxt.setText("");
                PatientNameTxt.setText("");
                PatientPostalCodeTxt.setText("");
                PatientStreetNameTxt.setText("");

            }
        }
        PopulatePatientTable();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void PatientStreetNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientStreetNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientStreetNameTxtActionPerformed

    private void PatientBloodPressureTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientBloodPressureTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientBloodPressureTxtActionPerformed

    private void PatientIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientIDTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientIDTxtActionPerformed

    private void PatientBloodGroupTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientBloodGroupTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientBloodGroupTxtActionPerformed

    private void PatientNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientNameTxtActionPerformed

    private void PatientDiagnosisTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientDiagnosisTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientDiagnosisTxtActionPerformed

    private void PatientContactTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientContactTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientContactTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PatientAgeLabel;
    private javax.swing.JTextField PatientAgeTxt;
    private javax.swing.JLabel PatientBloodGroupLabel;
    private javax.swing.JTextField PatientBloodGroupTxt;
    private javax.swing.JLabel PatientBloodPressureLabel;
    private javax.swing.JTextField PatientBloodPressureTxt;
    private javax.swing.JLabel PatientBodyTempLabel;
    private javax.swing.JTextField PatientBodyTempTxt;
    private javax.swing.JLabel PatientCityLabel;
    private javax.swing.JTextField PatientCityTxt;
    private javax.swing.JLabel PatientContactLabel;
    private javax.swing.JTextField PatientContactTxt;
    private javax.swing.JLabel PatientCountryLabel;
    private javax.swing.JTextField PatientCountryTxt;
    private javax.swing.JLabel PatientDiagnosisLabel;
    private javax.swing.JTextField PatientDiagnosisTxt;
    private javax.swing.JLabel PatientEmailLabel;
    private javax.swing.JTextField PatientEmailTxt;
    private javax.swing.JLabel PatientGenderLabel;
    private javax.swing.JTextField PatientGenderTxt;
    private javax.swing.JLabel PatientHNOLabel;
    private javax.swing.JTextField PatientHNOTxt;
    private javax.swing.JLabel PatientIDLabel;
    private javax.swing.JTextField PatientIDTxt;
    private javax.swing.JLabel PatientMedicalHistoryLabel;
    private javax.swing.JTextField PatientMedicalHistoryTxt;
    private javax.swing.JLabel PatientNameLabel;
    private javax.swing.JTextField PatientNameTxt;
    private javax.swing.JLabel PatientPostalCodeLabel;
    private javax.swing.JTextField PatientPostalCodeTxt;
    private javax.swing.JLabel PatientStreetNameLabel;
    private javax.swing.JTextField PatientStreetNameTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

     private void PopulatePatientTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for (PatientDetails ed : patient_history.getHistory()){
            Object[] row = new Object[5];
            row[0] = ed;
            row[1] = ed.getPatient_id();
            row[2] = ed.getPatient_age();
            row[3] = ed.getPatient_bloodgroup();
            row[4] = ed.getPatient_contact();
            
            model.addRow(row);
    }

}
}
